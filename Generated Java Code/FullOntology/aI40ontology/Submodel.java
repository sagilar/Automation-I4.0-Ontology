package aI40ontology;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Submodel <br>
 * @version generated on Fri Feb 26 14:35:08 COT 2021 by santiago
 */

public interface Submodel extends Has_Data_Specification, Has_Kind, Identifiable {

    /* ***************************************************
     * Property http://www.semanticweb.org/santiago/Automation-I4.0-Ontology#isVirtualizedIn
     */
     
    /**
     * Gets all property values for the isVirtualizedIn property.<p>
     * 
     * @returns a collection of values for the isVirtualizedIn property.
     */
    Collection<? extends Admin_Shell> getIsVirtualizedIn();

    /**
     * Checks if the class has a isVirtualizedIn property value.<p>
     * 
     * @return true if there is a isVirtualizedIn property value.
     */
    boolean hasIsVirtualizedIn();

    /**
     * Adds a isVirtualizedIn property value.<p>
     * 
     * @param newIsVirtualizedIn the isVirtualizedIn property value to be added
     */
    void addIsVirtualizedIn(Admin_Shell newIsVirtualizedIn);

    /**
     * Removes a isVirtualizedIn property value.<p>
     * 
     * @param oldIsVirtualizedIn the isVirtualizedIn property value to be removed.
     */
    void removeIsVirtualizedIn(Admin_Shell oldIsVirtualizedIn);


    /* ***************************************************
     * Property https://w3id.org/i40/rami#contributes
     */
     
    /**
     * Gets all property values for the has_Type_Description property.<p>
     * 
     * @returns a collection of values for the has_Type_Description property.
     */
    Collection<? extends WrappedIndividual> getHas_Type_Description();

    /**
     * Checks if the class has a has_Type_Description property value.<p>
     * 
     * @return true if there is a has_Type_Description property value.
     */
    boolean hasHas_Type_Description();

    /**
     * Adds a has_Type_Description property value.<p>
     * 
     * @param newHas_Type_Description the has_Type_Description property value to be added
     */
    void addHas_Type_Description(WrappedIndividual newHas_Type_Description);

    /**
     * Removes a has_Type_Description property value.<p>
     * 
     * @param oldHas_Type_Description the has_Type_Description property value to be removed.
     */
    void removeHas_Type_Description(WrappedIndividual oldHas_Type_Description);


    /* ***************************************************
     * Property https://w3id.org/i40/rami#hasDatatype
     */
     
    /**
     * Gets all property values for the has_Datatype property.<p>
     * 
     * @returns a collection of values for the has_Datatype property.
     */
    Collection<? extends WrappedIndividual> getHas_Datatype();

    /**
     * Checks if the class has a has_Datatype property value.<p>
     * 
     * @return true if there is a has_Datatype property value.
     */
    boolean hasHas_Datatype();

    /**
     * Adds a has_Datatype property value.<p>
     * 
     * @param newHas_Datatype the has_Datatype property value to be added
     */
    void addHas_Datatype(WrappedIndividual newHas_Datatype);

    /**
     * Removes a has_Datatype property value.<p>
     * 
     * @param oldHas_Datatype the has_Datatype property value to be removed.
     */
    void removeHas_Datatype(WrappedIndividual oldHas_Datatype);


    /* ***************************************************
     * Property https://w3id.org/i40/rami#hasReference
     */
     
    /**
     * Gets all property values for the has_Reference property.<p>
     * 
     * @returns a collection of values for the has_Reference property.
     */
    Collection<? extends WrappedIndividual> getHas_Reference();

    /**
     * Checks if the class has a has_Reference property value.<p>
     * 
     * @return true if there is a has_Reference property value.
     */
    boolean hasHas_Reference();

    /**
     * Adds a has_Reference property value.<p>
     * 
     * @param newHas_Reference the has_Reference property value to be added
     */
    void addHas_Reference(WrappedIndividual newHas_Reference);

    /**
     * Removes a has_Reference property value.<p>
     * 
     * @param oldHas_Reference the has_Reference property value to be removed.
     */
    void removeHas_Reference(WrappedIndividual oldHas_Reference);


    /* ***************************************************
     * Property https://w3id.org/i40/rami#hasValue
     */
     
    /**
     * Gets all property values for the hasValue property.<p>
     * 
     * @returns a collection of values for the hasValue property.
     */
    Collection<? extends Value> getHasValue();

    /**
     * Checks if the class has a hasValue property value.<p>
     * 
     * @return true if there is a hasValue property value.
     */
    boolean hasHasValue();

    /**
     * Adds a hasValue property value.<p>
     * 
     * @param newHasValue the hasValue property value to be added
     */
    void addHasValue(Value newHasValue);

    /**
     * Removes a hasValue property value.<p>
     * 
     * @param oldHasValue the hasValue property value to be removed.
     */
    void removeHasValue(Value oldHasValue);


    /* ***************************************************
     * Property https://w3id.org/i40/rami#inAccordanceWith
     */
     
    /**
     * Gets all property values for the in_Accordance_With property.<p>
     * 
     * @returns a collection of values for the in_Accordance_With property.
     */
    Collection<? extends WrappedIndividual> getIn_Accordance_With();

    /**
     * Checks if the class has a in_Accordance_With property value.<p>
     * 
     * @return true if there is a in_Accordance_With property value.
     */
    boolean hasIn_Accordance_With();

    /**
     * Adds a in_Accordance_With property value.<p>
     * 
     * @param newIn_Accordance_With the in_Accordance_With property value to be added
     */
    void addIn_Accordance_With(WrappedIndividual newIn_Accordance_With);

    /**
     * Removes a in_Accordance_With property value.<p>
     * 
     * @param oldIn_Accordance_With the in_Accordance_With property value to be removed.
     */
    void removeIn_Accordance_With(WrappedIndividual oldIn_Accordance_With);


    /* ***************************************************
     * Property http://www.semanticweb.org/santiago/Automation-I4.0-Ontology#hasDescription
     */
     
    /**
     * Gets all property values for the hasDescription property.<p>
     * 
     * @returns a collection of values for the hasDescription property.
     */
    Collection<? extends String> getHasDescription();

    /**
     * Checks if the class has a hasDescription property value.<p>
     * 
     * @return true if there is a hasDescription property value.
     */
    boolean hasHasDescription();

    /**
     * Adds a hasDescription property value.<p>
     * 
     * @param newHasDescription the hasDescription property value to be added
     */
    void addHasDescription(String newHasDescription);

    /**
     * Removes a hasDescription property value.<p>
     * 
     * @param oldHasDescription the hasDescription property value to be removed.
     */
    void removeHasDescription(String oldHasDescription);



    /* ***************************************************
     * Property http://www.semanticweb.org/santiago/Automation-I4.0-Ontology#hasRelatedOntology
     */
     
    /**
     * Gets all property values for the hasRelatedOntology property.<p>
     * 
     * @returns a collection of values for the hasRelatedOntology property.
     */
    Collection<? extends Object> getHasRelatedOntology();

    /**
     * Checks if the class has a hasRelatedOntology property value.<p>
     * 
     * @return true if there is a hasRelatedOntology property value.
     */
    boolean hasHasRelatedOntology();

    /**
     * Adds a hasRelatedOntology property value.<p>
     * 
     * @param newHasRelatedOntology the hasRelatedOntology property value to be added
     */
    void addHasRelatedOntology(Object newHasRelatedOntology);

    /**
     * Removes a hasRelatedOntology property value.<p>
     * 
     * @param oldHasRelatedOntology the hasRelatedOntology property value to be removed.
     */
    void removeHasRelatedOntology(Object oldHasRelatedOntology);



    /* ***************************************************
     * Property https://w3id.org/i40/rami#creationDate
     */
     
    /**
     * Gets all property values for the has_Creator property.<p>
     * 
     * @returns a collection of values for the has_Creator property.
     */
    Collection<? extends XMLGregorianCalendar> getHas_Creator();

    /**
     * Checks if the class has a has_Creator property value.<p>
     * 
     * @return true if there is a has_Creator property value.
     */
    boolean hasHas_Creator();

    /**
     * Adds a has_Creator property value.<p>
     * 
     * @param newHas_Creator the has_Creator property value to be added
     */
    void addHas_Creator(XMLGregorianCalendar newHas_Creator);

    /**
     * Removes a has_Creator property value.<p>
     * 
     * @param oldHas_Creator the has_Creator property value to be removed.
     */
    void removeHas_Creator(XMLGregorianCalendar oldHas_Creator);



    /* ***************************************************
     * Property https://w3id.org/i40/sto#abbreviation
     */
     
    /**
     * Gets all property values for the has_Abbreviated_Name property.<p>
     * 
     * @returns a collection of values for the has_Abbreviated_Name property.
     */
    Collection<? extends Object> getHas_Abbreviated_Name();

    /**
     * Checks if the class has a has_Abbreviated_Name property value.<p>
     * 
     * @return true if there is a has_Abbreviated_Name property value.
     */
    boolean hasHas_Abbreviated_Name();

    /**
     * Adds a has_Abbreviated_Name property value.<p>
     * 
     * @param newHas_Abbreviated_Name the has_Abbreviated_Name property value to be added
     */
    void addHas_Abbreviated_Name(Object newHas_Abbreviated_Name);

    /**
     * Removes a has_Abbreviated_Name property value.<p>
     * 
     * @param oldHas_Abbreviated_Name the has_Abbreviated_Name property value to be removed.
     */
    void removeHas_Abbreviated_Name(Object oldHas_Abbreviated_Name);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
