package aI40minontology;

import aI40minontology.impl.*;


import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: AI40MinOntology<br>
 * @version generated on Sun Feb 10 20:58:15 COT 2019 by Santiago
 */
public class AI40MinOntology implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public AI40MinOntology(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public AI40MinOntology(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Actor
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Actor", Actor.class, DefaultActor.class);
    }

    /**
     * Creates an instance of type Actor.  Modifies the underlying ontology.
     */
    public Actor createActor(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ACTOR, DefaultActor.class);
    }

    /**
     * Gets an instance of type Actor with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Actor getActor(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ACTOR, DefaultActor.class);
    }

    /**
     * Gets all instances of Actor from the ontology.
     */
    public Collection<? extends Actor> getAllActorInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ACTOR, DefaultActor.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#AdvancedFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#AdvancedFunction", AdvancedFunction.class, DefaultAdvancedFunction.class);
    }

    /**
     * Creates an instance of type AdvancedFunction.  Modifies the underlying ontology.
     */
    public AdvancedFunction createAdvancedFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ADVANCEDFUNCTION, DefaultAdvancedFunction.class);
    }

    /**
     * Gets an instance of type AdvancedFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public AdvancedFunction getAdvancedFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ADVANCEDFUNCTION, DefaultAdvancedFunction.class);
    }

    /**
     * Gets all instances of AdvancedFunction from the ontology.
     */
    public Collection<? extends AdvancedFunction> getAllAdvancedFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ADVANCEDFUNCTION, DefaultAdvancedFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#AnalogInput
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#AnalogInput", AnalogInput.class, DefaultAnalogInput.class);
    }

    /**
     * Creates an instance of type AnalogInput.  Modifies the underlying ontology.
     */
    public AnalogInput createAnalogInput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALOGINPUT, DefaultAnalogInput.class);
    }

    /**
     * Gets an instance of type AnalogInput with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public AnalogInput getAnalogInput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALOGINPUT, DefaultAnalogInput.class);
    }

    /**
     * Gets all instances of AnalogInput from the ontology.
     */
    public Collection<? extends AnalogInput> getAllAnalogInputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALOGINPUT, DefaultAnalogInput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#AnalogOutput
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#AnalogOutput", AnalogOutput.class, DefaultAnalogOutput.class);
    }

    /**
     * Creates an instance of type AnalogOutput.  Modifies the underlying ontology.
     */
    public AnalogOutput createAnalogOutput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALOGOUTPUT, DefaultAnalogOutput.class);
    }

    /**
     * Gets an instance of type AnalogOutput with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public AnalogOutput getAnalogOutput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALOGOUTPUT, DefaultAnalogOutput.class);
    }

    /**
     * Gets all instances of AnalogOutput from the ontology.
     */
    public Collection<? extends AnalogOutput> getAllAnalogOutputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALOGOUTPUT, DefaultAnalogOutput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#AnalogVariable
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#AnalogVariable", AnalogVariable.class, DefaultAnalogVariable.class);
    }

    /**
     * Creates an instance of type AnalogVariable.  Modifies the underlying ontology.
     */
    public AnalogVariable createAnalogVariable(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALOGVARIABLE, DefaultAnalogVariable.class);
    }

    /**
     * Gets an instance of type AnalogVariable with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public AnalogVariable getAnalogVariable(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALOGVARIABLE, DefaultAnalogVariable.class);
    }

    /**
     * Gets all instances of AnalogVariable from the ontology.
     */
    public Collection<? extends AnalogVariable> getAllAnalogVariableInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALOGVARIABLE, DefaultAnalogVariable.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Arc
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Arc", Arc.class, DefaultArc.class);
    }

    /**
     * Creates an instance of type Arc.  Modifies the underlying ontology.
     */
    public Arc createArc(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ARC, DefaultArc.class);
    }

    /**
     * Gets an instance of type Arc with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Arc getArc(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ARC, DefaultArc.class);
    }

    /**
     * Gets all instances of Arc from the ontology.
     */
    public Collection<? extends Arc> getAllArcInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ARC, DefaultArc.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Architecture
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Architecture", Architecture.class, DefaultArchitecture.class);
    }

    /**
     * Creates an instance of type Architecture.  Modifies the underlying ontology.
     */
    public Architecture createArchitecture(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ARCHITECTURE, DefaultArchitecture.class);
    }

    /**
     * Gets an instance of type Architecture with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Architecture getArchitecture(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ARCHITECTURE, DefaultArchitecture.class);
    }

    /**
     * Gets all instances of Architecture from the ontology.
     */
    public Collection<? extends Architecture> getAllArchitectureInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ARCHITECTURE, DefaultArchitecture.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#As-a-ServiceFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#As-a-ServiceFunction", As_a_ServiceFunction.class, DefaultAs_a_ServiceFunction.class);
    }

    /**
     * Creates an instance of type As_a_ServiceFunction.  Modifies the underlying ontology.
     */
    public As_a_ServiceFunction createAs_a_ServiceFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AS_A_SERVICEFUNCTION, DefaultAs_a_ServiceFunction.class);
    }

    /**
     * Gets an instance of type As_a_ServiceFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public As_a_ServiceFunction getAs_a_ServiceFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AS_A_SERVICEFUNCTION, DefaultAs_a_ServiceFunction.class);
    }

    /**
     * Gets all instances of As_a_ServiceFunction from the ontology.
     */
    public Collection<? extends As_a_ServiceFunction> getAllAs_a_ServiceFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AS_A_SERVICEFUNCTION, DefaultAs_a_ServiceFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#BidirectionalArc
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#BidirectionalArc", BidirectionalArc.class, DefaultBidirectionalArc.class);
    }

    /**
     * Creates an instance of type BidirectionalArc.  Modifies the underlying ontology.
     */
    public BidirectionalArc createBidirectionalArc(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_BIDIRECTIONALARC, DefaultBidirectionalArc.class);
    }

    /**
     * Gets an instance of type BidirectionalArc with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public BidirectionalArc getBidirectionalArc(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_BIDIRECTIONALARC, DefaultBidirectionalArc.class);
    }

    /**
     * Gets all instances of BidirectionalArc from the ontology.
     */
    public Collection<? extends BidirectionalArc> getAllBidirectionalArcInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_BIDIRECTIONALARC, DefaultBidirectionalArc.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#ConcurrentState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#ConcurrentState", ConcurrentState.class, DefaultConcurrentState.class);
    }

    /**
     * Creates an instance of type ConcurrentState.  Modifies the underlying ontology.
     */
    public ConcurrentState createConcurrentState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CONCURRENTSTATE, DefaultConcurrentState.class);
    }

    /**
     * Gets an instance of type ConcurrentState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ConcurrentState getConcurrentState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CONCURRENTSTATE, DefaultConcurrentState.class);
    }

    /**
     * Gets all instances of ConcurrentState from the ontology.
     */
    public Collection<? extends ConcurrentState> getAllConcurrentStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CONCURRENTSTATE, DefaultConcurrentState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#CurrentState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#CurrentState", CurrentState.class, DefaultCurrentState.class);
    }

    /**
     * Creates an instance of type CurrentState.  Modifies the underlying ontology.
     */
    public CurrentState createCurrentState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CURRENTSTATE, DefaultCurrentState.class);
    }

    /**
     * Gets an instance of type CurrentState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public CurrentState getCurrentState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CURRENTSTATE, DefaultCurrentState.class);
    }

    /**
     * Gets all instances of CurrentState from the ontology.
     */
    public Collection<? extends CurrentState> getAllCurrentStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CURRENTSTATE, DefaultCurrentState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DataInput
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DataInput", DataInput.class, DefaultDataInput.class);
    }

    /**
     * Creates an instance of type DataInput.  Modifies the underlying ontology.
     */
    public DataInput createDataInput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DATAINPUT, DefaultDataInput.class);
    }

    /**
     * Gets an instance of type DataInput with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DataInput getDataInput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DATAINPUT, DefaultDataInput.class);
    }

    /**
     * Gets all instances of DataInput from the ontology.
     */
    public Collection<? extends DataInput> getAllDataInputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DATAINPUT, DefaultDataInput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DataOutput
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DataOutput", DataOutput.class, DefaultDataOutput.class);
    }

    /**
     * Creates an instance of type DataOutput.  Modifies the underlying ontology.
     */
    public DataOutput createDataOutput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DATAOUTPUT, DefaultDataOutput.class);
    }

    /**
     * Gets an instance of type DataOutput with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DataOutput getDataOutput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DATAOUTPUT, DefaultDataOutput.class);
    }

    /**
     * Gets all instances of DataOutput from the ontology.
     */
    public Collection<? extends DataOutput> getAllDataOutputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DATAOUTPUT, DefaultDataOutput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DataStream
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DataStream", DataStream.class, DefaultDataStream.class);
    }

    /**
     * Creates an instance of type DataStream.  Modifies the underlying ontology.
     */
    public DataStream createDataStream(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DATASTREAM, DefaultDataStream.class);
    }

    /**
     * Gets an instance of type DataStream with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DataStream getDataStream(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DATASTREAM, DefaultDataStream.class);
    }

    /**
     * Gets all instances of DataStream from the ontology.
     */
    public Collection<? extends DataStream> getAllDataStreamInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DATASTREAM, DefaultDataStream.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DataVariable
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DataVariable", DataVariable.class, DefaultDataVariable.class);
    }

    /**
     * Creates an instance of type DataVariable.  Modifies the underlying ontology.
     */
    public DataVariable createDataVariable(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DATAVARIABLE, DefaultDataVariable.class);
    }

    /**
     * Gets an instance of type DataVariable with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DataVariable getDataVariable(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DATAVARIABLE, DefaultDataVariable.class);
    }

    /**
     * Gets all instances of DataVariable from the ontology.
     */
    public Collection<? extends DataVariable> getAllDataVariableInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DATAVARIABLE, DefaultDataVariable.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Device
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Device", Device.class, DefaultDevice.class);
    }

    /**
     * Creates an instance of type Device.  Modifies the underlying ontology.
     */
    public Device createDevice(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DEVICE, DefaultDevice.class);
    }

    /**
     * Gets an instance of type Device with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Device getDevice(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DEVICE, DefaultDevice.class);
    }

    /**
     * Gets all instances of Device from the ontology.
     */
    public Collection<? extends Device> getAllDeviceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DEVICE, DefaultDevice.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DigitalInput
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DigitalInput", DigitalInput.class, DefaultDigitalInput.class);
    }

    /**
     * Creates an instance of type DigitalInput.  Modifies the underlying ontology.
     */
    public DigitalInput createDigitalInput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DIGITALINPUT, DefaultDigitalInput.class);
    }

    /**
     * Gets an instance of type DigitalInput with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DigitalInput getDigitalInput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DIGITALINPUT, DefaultDigitalInput.class);
    }

    /**
     * Gets all instances of DigitalInput from the ontology.
     */
    public Collection<? extends DigitalInput> getAllDigitalInputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DIGITALINPUT, DefaultDigitalInput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DigitalOutput
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DigitalOutput", DigitalOutput.class, DefaultDigitalOutput.class);
    }

    /**
     * Creates an instance of type DigitalOutput.  Modifies the underlying ontology.
     */
    public DigitalOutput createDigitalOutput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DIGITALOUTPUT, DefaultDigitalOutput.class);
    }

    /**
     * Gets an instance of type DigitalOutput with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DigitalOutput getDigitalOutput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DIGITALOUTPUT, DefaultDigitalOutput.class);
    }

    /**
     * Gets all instances of DigitalOutput from the ontology.
     */
    public Collection<? extends DigitalOutput> getAllDigitalOutputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DIGITALOUTPUT, DefaultDigitalOutput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DigitalVariable
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DigitalVariable", DigitalVariable.class, DefaultDigitalVariable.class);
    }

    /**
     * Creates an instance of type DigitalVariable.  Modifies the underlying ontology.
     */
    public DigitalVariable createDigitalVariable(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DIGITALVARIABLE, DefaultDigitalVariable.class);
    }

    /**
     * Gets an instance of type DigitalVariable with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DigitalVariable getDigitalVariable(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DIGITALVARIABLE, DefaultDigitalVariable.class);
    }

    /**
     * Gets all instances of DigitalVariable from the ontology.
     */
    public Collection<? extends DigitalVariable> getAllDigitalVariableInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DIGITALVARIABLE, DefaultDigitalVariable.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#DiscreteDynamicsModel
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#DiscreteDynamicsModel", DiscreteDynamicsModel.class, DefaultDiscreteDynamicsModel.class);
    }

    /**
     * Creates an instance of type DiscreteDynamicsModel.  Modifies the underlying ontology.
     */
    public DiscreteDynamicsModel createDiscreteDynamicsModel(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DISCRETEDYNAMICSMODEL, DefaultDiscreteDynamicsModel.class);
    }

    /**
     * Gets an instance of type DiscreteDynamicsModel with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public DiscreteDynamicsModel getDiscreteDynamicsModel(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DISCRETEDYNAMICSMODEL, DefaultDiscreteDynamicsModel.class);
    }

    /**
     * Gets all instances of DiscreteDynamicsModel from the ontology.
     */
    public Collection<? extends DiscreteDynamicsModel> getAllDiscreteDynamicsModelInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DISCRETEDYNAMICSMODEL, DefaultDiscreteDynamicsModel.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Domain
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Domain", Domain.class, DefaultDomain.class);
    }

    /**
     * Creates an instance of type Domain.  Modifies the underlying ontology.
     */
    public Domain createDomain(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DOMAIN, DefaultDomain.class);
    }

    /**
     * Gets an instance of type Domain with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Domain getDomain(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DOMAIN, DefaultDomain.class);
    }

    /**
     * Gets all instances of Domain from the ontology.
     */
    public Collection<? extends Domain> getAllDomainInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DOMAIN, DefaultDomain.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Entity
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Entity", Entity.class, DefaultEntity.class);
    }

    /**
     * Creates an instance of type Entity.  Modifies the underlying ontology.
     */
    public Entity createEntity(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTITY, DefaultEntity.class);
    }

    /**
     * Gets an instance of type Entity with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entity getEntity(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTITY, DefaultEntity.class);
    }

    /**
     * Gets all instances of Entity from the ontology.
     */
    public Collection<? extends Entity> getAllEntityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTITY, DefaultEntity.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#FinalState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#FinalState", FinalState.class, DefaultFinalState.class);
    }

    /**
     * Creates an instance of type FinalState.  Modifies the underlying ontology.
     */
    public FinalState createFinalState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FINALSTATE, DefaultFinalState.class);
    }

    /**
     * Gets an instance of type FinalState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public FinalState getFinalState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FINALSTATE, DefaultFinalState.class);
    }

    /**
     * Gets all instances of FinalState from the ontology.
     */
    public Collection<? extends FinalState> getAllFinalStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FINALSTATE, DefaultFinalState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Function
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Function", Function.class, DefaultFunction.class);
    }

    /**
     * Creates an instance of type Function.  Modifies the underlying ontology.
     */
    public Function createFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FUNCTION, DefaultFunction.class);
    }

    /**
     * Gets an instance of type Function with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Function getFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FUNCTION, DefaultFunction.class);
    }

    /**
     * Gets all instances of Function from the ontology.
     */
    public Collection<? extends Function> getAllFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FUNCTION, DefaultFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Information
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Information", Information.class, DefaultInformation.class);
    }

    /**
     * Creates an instance of type Information.  Modifies the underlying ontology.
     */
    public Information createInformation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INFORMATION, DefaultInformation.class);
    }

    /**
     * Gets an instance of type Information with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Information getInformation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INFORMATION, DefaultInformation.class);
    }

    /**
     * Gets all instances of Information from the ontology.
     */
    public Collection<? extends Information> getAllInformationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INFORMATION, DefaultInformation.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#InitialState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#InitialState", InitialState.class, DefaultInitialState.class);
    }

    /**
     * Creates an instance of type InitialState.  Modifies the underlying ontology.
     */
    public InitialState createInitialState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INITIALSTATE, DefaultInitialState.class);
    }

    /**
     * Gets an instance of type InitialState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public InitialState getInitialState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INITIALSTATE, DefaultInitialState.class);
    }

    /**
     * Gets all instances of InitialState from the ontology.
     */
    public Collection<? extends InitialState> getAllInitialStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INITIALSTATE, DefaultInitialState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Input
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Input", Input.class, DefaultInput.class);
    }

    /**
     * Creates an instance of type Input.  Modifies the underlying ontology.
     */
    public Input createInput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INPUT, DefaultInput.class);
    }

    /**
     * Gets an instance of type Input with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Input getInput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INPUT, DefaultInput.class);
    }

    /**
     * Gets all instances of Input from the ontology.
     */
    public Collection<? extends Input> getAllInputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INPUT, DefaultInput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Interoperability
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Interoperability", Interoperability.class, DefaultInteroperability.class);
    }

    /**
     * Creates an instance of type Interoperability.  Modifies the underlying ontology.
     */
    public Interoperability createInteroperability(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INTEROPERABILITY, DefaultInteroperability.class);
    }

    /**
     * Gets an instance of type Interoperability with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Interoperability getInteroperability(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INTEROPERABILITY, DefaultInteroperability.class);
    }

    /**
     * Gets all instances of Interoperability from the ontology.
     */
    public Collection<? extends Interoperability> getAllInteroperabilityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INTEROPERABILITY, DefaultInteroperability.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Language
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Language", Language.class, DefaultLanguage.class);
    }

    /**
     * Creates an instance of type Language.  Modifies the underlying ontology.
     */
    public Language createLanguage(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LANGUAGE, DefaultLanguage.class);
    }

    /**
     * Gets an instance of type Language with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Language getLanguage(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LANGUAGE, DefaultLanguage.class);
    }

    /**
     * Gets all instances of Language from the ontology.
     */
    public Collection<? extends Language> getAllLanguageInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LANGUAGE, DefaultLanguage.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Loop
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Loop", Loop.class, DefaultLoop.class);
    }

    /**
     * Creates an instance of type Loop.  Modifies the underlying ontology.
     */
    public Loop createLoop(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_LOOP, DefaultLoop.class);
    }

    /**
     * Gets an instance of type Loop with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Loop getLoop(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_LOOP, DefaultLoop.class);
    }

    /**
     * Gets all instances of Loop from the ontology.
     */
    public Collection<? extends Loop> getAllLoopInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_LOOP, DefaultLoop.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#ManyToManyTransition
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#ManyToManyTransition", ManyToManyTransition.class, DefaultManyToManyTransition.class);
    }

    /**
     * Creates an instance of type ManyToManyTransition.  Modifies the underlying ontology.
     */
    public ManyToManyTransition createManyToManyTransition(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MANYTOMANYTRANSITION, DefaultManyToManyTransition.class);
    }

    /**
     * Gets an instance of type ManyToManyTransition with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ManyToManyTransition getManyToManyTransition(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MANYTOMANYTRANSITION, DefaultManyToManyTransition.class);
    }

    /**
     * Gets all instances of ManyToManyTransition from the ontology.
     */
    public Collection<? extends ManyToManyTransition> getAllManyToManyTransitionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MANYTOMANYTRANSITION, DefaultManyToManyTransition.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#ManyToOneTransition
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#ManyToOneTransition", ManyToOneTransition.class, DefaultManyToOneTransition.class);
    }

    /**
     * Creates an instance of type ManyToOneTransition.  Modifies the underlying ontology.
     */
    public ManyToOneTransition createManyToOneTransition(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MANYTOONETRANSITION, DefaultManyToOneTransition.class);
    }

    /**
     * Gets an instance of type ManyToOneTransition with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ManyToOneTransition getManyToOneTransition(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MANYTOONETRANSITION, DefaultManyToOneTransition.class);
    }

    /**
     * Gets all instances of ManyToOneTransition from the ontology.
     */
    public Collection<? extends ManyToOneTransition> getAllManyToOneTransitionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MANYTOONETRANSITION, DefaultManyToOneTransition.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#ModelElement
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#ModelElement", ModelElement.class, DefaultModelElement.class);
    }

    /**
     * Creates an instance of type ModelElement.  Modifies the underlying ontology.
     */
    public ModelElement createModelElement(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MODELELEMENT, DefaultModelElement.class);
    }

    /**
     * Gets an instance of type ModelElement with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ModelElement getModelElement(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MODELELEMENT, DefaultModelElement.class);
    }

    /**
     * Gets all instances of ModelElement from the ontology.
     */
    public Collection<? extends ModelElement> getAllModelElementInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MODELELEMENT, DefaultModelElement.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#MultivariableStateFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#MultivariableStateFunction", MultivariableStateFunction.class, DefaultMultivariableStateFunction.class);
    }

    /**
     * Creates an instance of type MultivariableStateFunction.  Modifies the underlying ontology.
     */
    public MultivariableStateFunction createMultivariableStateFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MULTIVARIABLESTATEFUNCTION, DefaultMultivariableStateFunction.class);
    }

    /**
     * Gets an instance of type MultivariableStateFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public MultivariableStateFunction getMultivariableStateFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MULTIVARIABLESTATEFUNCTION, DefaultMultivariableStateFunction.class);
    }

    /**
     * Gets all instances of MultivariableStateFunction from the ontology.
     */
    public Collection<? extends MultivariableStateFunction> getAllMultivariableStateFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MULTIVARIABLESTATEFUNCTION, DefaultMultivariableStateFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#MultivariableTransitionFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#MultivariableTransitionFunction", MultivariableTransitionFunction.class, DefaultMultivariableTransitionFunction.class);
    }

    /**
     * Creates an instance of type MultivariableTransitionFunction.  Modifies the underlying ontology.
     */
    public MultivariableTransitionFunction createMultivariableTransitionFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MULTIVARIABLETRANSITIONFUNCTION, DefaultMultivariableTransitionFunction.class);
    }

    /**
     * Gets an instance of type MultivariableTransitionFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public MultivariableTransitionFunction getMultivariableTransitionFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MULTIVARIABLETRANSITIONFUNCTION, DefaultMultivariableTransitionFunction.class);
    }

    /**
     * Gets all instances of MultivariableTransitionFunction from the ontology.
     */
    public Collection<? extends MultivariableTransitionFunction> getAllMultivariableTransitionFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MULTIVARIABLETRANSITIONFUNCTION, DefaultMultivariableTransitionFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Network
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Network", Network.class, DefaultNetwork.class);
    }

    /**
     * Creates an instance of type Network.  Modifies the underlying ontology.
     */
    public Network createNetwork(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_NETWORK, DefaultNetwork.class);
    }

    /**
     * Gets an instance of type Network with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Network getNetwork(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_NETWORK, DefaultNetwork.class);
    }

    /**
     * Gets all instances of Network from the ontology.
     */
    public Collection<? extends Network> getAllNetworkInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_NETWORK, DefaultNetwork.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#NextState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#NextState", NextState.class, DefaultNextState.class);
    }

    /**
     * Creates an instance of type NextState.  Modifies the underlying ontology.
     */
    public NextState createNextState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_NEXTSTATE, DefaultNextState.class);
    }

    /**
     * Gets an instance of type NextState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public NextState getNextState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_NEXTSTATE, DefaultNextState.class);
    }

    /**
     * Gets all instances of NextState from the ontology.
     */
    public Collection<? extends NextState> getAllNextStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_NEXTSTATE, DefaultNextState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#OneToManyTransition
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#OneToManyTransition", OneToManyTransition.class, DefaultOneToManyTransition.class);
    }

    /**
     * Creates an instance of type OneToManyTransition.  Modifies the underlying ontology.
     */
    public OneToManyTransition createOneToManyTransition(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ONETOMANYTRANSITION, DefaultOneToManyTransition.class);
    }

    /**
     * Gets an instance of type OneToManyTransition with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public OneToManyTransition getOneToManyTransition(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ONETOMANYTRANSITION, DefaultOneToManyTransition.class);
    }

    /**
     * Gets all instances of OneToManyTransition from the ontology.
     */
    public Collection<? extends OneToManyTransition> getAllOneToManyTransitionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ONETOMANYTRANSITION, DefaultOneToManyTransition.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#OneToOneTransition
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#OneToOneTransition", OneToOneTransition.class, DefaultOneToOneTransition.class);
    }

    /**
     * Creates an instance of type OneToOneTransition.  Modifies the underlying ontology.
     */
    public OneToOneTransition createOneToOneTransition(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ONETOONETRANSITION, DefaultOneToOneTransition.class);
    }

    /**
     * Gets an instance of type OneToOneTransition with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public OneToOneTransition getOneToOneTransition(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ONETOONETRANSITION, DefaultOneToOneTransition.class);
    }

    /**
     * Gets all instances of OneToOneTransition from the ontology.
     */
    public Collection<? extends OneToOneTransition> getAllOneToOneTransitionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ONETOONETRANSITION, DefaultOneToOneTransition.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Output
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Output", Output.class, DefaultOutput.class);
    }

    /**
     * Creates an instance of type Output.  Modifies the underlying ontology.
     */
    public Output createOutput(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OUTPUT, DefaultOutput.class);
    }

    /**
     * Gets an instance of type Output with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Output getOutput(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OUTPUT, DefaultOutput.class);
    }

    /**
     * Gets all instances of Output from the ontology.
     */
    public Collection<? extends Output> getAllOutputInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OUTPUT, DefaultOutput.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Person
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Person", Person.class, DefaultPerson.class);
    }

    /**
     * Creates an instance of type Person.  Modifies the underlying ontology.
     */
    public Person createPerson(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PERSON, DefaultPerson.class);
    }

    /**
     * Gets an instance of type Person with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Person getPerson(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PERSON, DefaultPerson.class);
    }

    /**
     * Gets all instances of Person from the ontology.
     */
    public Collection<? extends Person> getAllPersonInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PERSON, DefaultPerson.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#PreviousState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#PreviousState", PreviousState.class, DefaultPreviousState.class);
    }

    /**
     * Creates an instance of type PreviousState.  Modifies the underlying ontology.
     */
    public PreviousState createPreviousState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PREVIOUSSTATE, DefaultPreviousState.class);
    }

    /**
     * Gets an instance of type PreviousState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public PreviousState getPreviousState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PREVIOUSSTATE, DefaultPreviousState.class);
    }

    /**
     * Gets all instances of PreviousState from the ontology.
     */
    public Collection<? extends PreviousState> getAllPreviousStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PREVIOUSSTATE, DefaultPreviousState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Process_
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Process_", Process_.class, DefaultProcess_.class);
    }

    /**
     * Creates an instance of type Process_.  Modifies the underlying ontology.
     */
    public Process_ createProcess_(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PROCESS_, DefaultProcess_.class);
    }

    /**
     * Gets an instance of type Process_ with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Process_ getProcess_(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PROCESS_, DefaultProcess_.class);
    }

    /**
     * Gets all instances of Process_ from the ontology.
     */
    public Collection<? extends Process_> getAllProcess_Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PROCESS_, DefaultProcess_.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Product-Asset
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Product-Asset", Product_Asset.class, DefaultProduct_Asset.class);
    }

    /**
     * Creates an instance of type Product_Asset.  Modifies the underlying ontology.
     */
    public Product_Asset createProduct_Asset(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PRODUCT_ASSET, DefaultProduct_Asset.class);
    }

    /**
     * Gets an instance of type Product_Asset with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Product_Asset getProduct_Asset(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PRODUCT_ASSET, DefaultProduct_Asset.class);
    }

    /**
     * Gets all instances of Product_Asset from the ontology.
     */
    public Collection<? extends Product_Asset> getAllProduct_AssetInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PRODUCT_ASSET, DefaultProduct_Asset.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Protocol
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Protocol", Protocol.class, DefaultProtocol.class);
    }

    /**
     * Creates an instance of type Protocol.  Modifies the underlying ontology.
     */
    public Protocol createProtocol(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PROTOCOL, DefaultProtocol.class);
    }

    /**
     * Gets an instance of type Protocol with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Protocol getProtocol(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PROTOCOL, DefaultProtocol.class);
    }

    /**
     * Gets all instances of Protocol from the ontology.
     */
    public Collection<? extends Protocol> getAllProtocolInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PROTOCOL, DefaultProtocol.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Representation
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Representation", Representation.class, DefaultRepresentation.class);
    }

    /**
     * Creates an instance of type Representation.  Modifies the underlying ontology.
     */
    public Representation createRepresentation(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REPRESENTATION, DefaultRepresentation.class);
    }

    /**
     * Gets an instance of type Representation with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Representation getRepresentation(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REPRESENTATION, DefaultRepresentation.class);
    }

    /**
     * Gets all instances of Representation from the ontology.
     */
    public Collection<? extends Representation> getAllRepresentationInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REPRESENTATION, DefaultRepresentation.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#RequestFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#RequestFunction", RequestFunction.class, DefaultRequestFunction.class);
    }

    /**
     * Creates an instance of type RequestFunction.  Modifies the underlying ontology.
     */
    public RequestFunction createRequestFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REQUESTFUNCTION, DefaultRequestFunction.class);
    }

    /**
     * Gets an instance of type RequestFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public RequestFunction getRequestFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REQUESTFUNCTION, DefaultRequestFunction.class);
    }

    /**
     * Gets all instances of RequestFunction from the ontology.
     */
    public Collection<? extends RequestFunction> getAllRequestFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REQUESTFUNCTION, DefaultRequestFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Resource
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Resource", Resource.class, DefaultResource.class);
    }

    /**
     * Creates an instance of type Resource.  Modifies the underlying ontology.
     */
    public Resource createResource(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RESOURCE, DefaultResource.class);
    }

    /**
     * Gets an instance of type Resource with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Resource getResource(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RESOURCE, DefaultResource.class);
    }

    /**
     * Gets all instances of Resource from the ontology.
     */
    public Collection<? extends Resource> getAllResourceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RESOURCE, DefaultResource.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Resource-SharedState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Resource-SharedState", Resource_SharedState.class, DefaultResource_SharedState.class);
    }

    /**
     * Creates an instance of type Resource_SharedState.  Modifies the underlying ontology.
     */
    public Resource_SharedState createResource_SharedState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RESOURCE_SHAREDSTATE, DefaultResource_SharedState.class);
    }

    /**
     * Gets an instance of type Resource_SharedState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Resource_SharedState getResource_SharedState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RESOURCE_SHAREDSTATE, DefaultResource_SharedState.class);
    }

    /**
     * Gets all instances of Resource_SharedState from the ontology.
     */
    public Collection<? extends Resource_SharedState> getAllResource_SharedStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RESOURCE_SHAREDSTATE, DefaultResource_SharedState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#SemanticInteroperability
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#SemanticInteroperability", SemanticInteroperability.class, DefaultSemanticInteroperability.class);
    }

    /**
     * Creates an instance of type SemanticInteroperability.  Modifies the underlying ontology.
     */
    public SemanticInteroperability createSemanticInteroperability(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SEMANTICINTEROPERABILITY, DefaultSemanticInteroperability.class);
    }

    /**
     * Gets an instance of type SemanticInteroperability with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SemanticInteroperability getSemanticInteroperability(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SEMANTICINTEROPERABILITY, DefaultSemanticInteroperability.class);
    }

    /**
     * Gets all instances of SemanticInteroperability from the ontology.
     */
    public Collection<? extends SemanticInteroperability> getAllSemanticInteroperabilityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SEMANTICINTEROPERABILITY, DefaultSemanticInteroperability.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Semantics
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Semantics", Semantics.class, DefaultSemantics.class);
    }

    /**
     * Creates an instance of type Semantics.  Modifies the underlying ontology.
     */
    public Semantics createSemantics(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SEMANTICS, DefaultSemantics.class);
    }

    /**
     * Gets an instance of type Semantics with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Semantics getSemantics(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SEMANTICS, DefaultSemantics.class);
    }

    /**
     * Gets all instances of Semantics from the ontology.
     */
    public Collection<? extends Semantics> getAllSemanticsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SEMANTICS, DefaultSemantics.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Sequence
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Sequence", Sequence.class, DefaultSequence.class);
    }

    /**
     * Creates an instance of type Sequence.  Modifies the underlying ontology.
     */
    public Sequence createSequence(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SEQUENCE, DefaultSequence.class);
    }

    /**
     * Gets an instance of type Sequence with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sequence getSequence(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SEQUENCE, DefaultSequence.class);
    }

    /**
     * Gets all instances of Sequence from the ontology.
     */
    public Collection<? extends Sequence> getAllSequenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SEQUENCE, DefaultSequence.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Service
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Service", Service.class, DefaultService.class);
    }

    /**
     * Creates an instance of type Service.  Modifies the underlying ontology.
     */
    public Service createService(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SERVICE, DefaultService.class);
    }

    /**
     * Gets an instance of type Service with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Service getService(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SERVICE, DefaultService.class);
    }

    /**
     * Gets all instances of Service from the ontology.
     */
    public Collection<? extends Service> getAllServiceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SERVICE, DefaultService.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#SetElement
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#SetElement", SetElement.class, DefaultSetElement.class);
    }

    /**
     * Creates an instance of type SetElement.  Modifies the underlying ontology.
     */
    public SetElement createSetElement(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SETELEMENT, DefaultSetElement.class);
    }

    /**
     * Gets an instance of type SetElement with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SetElement getSetElement(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SETELEMENT, DefaultSetElement.class);
    }

    /**
     * Gets all instances of SetElement from the ontology.
     */
    public Collection<? extends SetElement> getAllSetElementInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SETELEMENT, DefaultSetElement.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#SoftwareResource
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#SoftwareResource", SoftwareResource.class, DefaultSoftwareResource.class);
    }

    /**
     * Creates an instance of type SoftwareResource.  Modifies the underlying ontology.
     */
    public SoftwareResource createSoftwareResource(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SOFTWARERESOURCE, DefaultSoftwareResource.class);
    }

    /**
     * Gets an instance of type SoftwareResource with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SoftwareResource getSoftwareResource(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SOFTWARERESOURCE, DefaultSoftwareResource.class);
    }

    /**
     * Gets all instances of SoftwareResource from the ontology.
     */
    public Collection<? extends SoftwareResource> getAllSoftwareResourceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SOFTWARERESOURCE, DefaultSoftwareResource.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Standard
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Standard", Standard.class, DefaultStandard.class);
    }

    /**
     * Creates an instance of type Standard.  Modifies the underlying ontology.
     */
    public Standard createStandard(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_STANDARD, DefaultStandard.class);
    }

    /**
     * Gets an instance of type Standard with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Standard getStandard(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_STANDARD, DefaultStandard.class);
    }

    /**
     * Gets all instances of Standard from the ontology.
     */
    public Collection<? extends Standard> getAllStandardInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_STANDARD, DefaultStandard.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#State
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#State", State.class, DefaultState.class);
    }

    /**
     * Creates an instance of type State.  Modifies the underlying ontology.
     */
    public State createState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_STATE, DefaultState.class);
    }

    /**
     * Gets an instance of type State with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public State getState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_STATE, DefaultState.class);
    }

    /**
     * Gets all instances of State from the ontology.
     */
    public Collection<? extends State> getAllStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_STATE, DefaultState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#StateFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#StateFunction", StateFunction.class, DefaultStateFunction.class);
    }

    /**
     * Creates an instance of type StateFunction.  Modifies the underlying ontology.
     */
    public StateFunction createStateFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_STATEFUNCTION, DefaultStateFunction.class);
    }

    /**
     * Gets an instance of type StateFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public StateFunction getStateFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_STATEFUNCTION, DefaultStateFunction.class);
    }

    /**
     * Gets all instances of StateFunction from the ontology.
     */
    public Collection<? extends StateFunction> getAllStateFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_STATEFUNCTION, DefaultStateFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Subloop
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Subloop", Subloop.class, DefaultSubloop.class);
    }

    /**
     * Creates an instance of type Subloop.  Modifies the underlying ontology.
     */
    public Subloop createSubloop(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SUBLOOP, DefaultSubloop.class);
    }

    /**
     * Gets an instance of type Subloop with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Subloop getSubloop(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SUBLOOP, DefaultSubloop.class);
    }

    /**
     * Gets all instances of Subloop from the ontology.
     */
    public Collection<? extends Subloop> getAllSubloopInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SUBLOOP, DefaultSubloop.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Subsequence
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Subsequence", Subsequence.class, DefaultSubsequence.class);
    }

    /**
     * Creates an instance of type Subsequence.  Modifies the underlying ontology.
     */
    public Subsequence createSubsequence(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SUBSEQUENCE, DefaultSubsequence.class);
    }

    /**
     * Gets an instance of type Subsequence with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Subsequence getSubsequence(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SUBSEQUENCE, DefaultSubsequence.class);
    }

    /**
     * Gets all instances of Subsequence from the ontology.
     */
    public Collection<? extends Subsequence> getAllSubsequenceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SUBSEQUENCE, DefaultSubsequence.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#SynchronousState
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#SynchronousState", SynchronousState.class, DefaultSynchronousState.class);
    }

    /**
     * Creates an instance of type SynchronousState.  Modifies the underlying ontology.
     */
    public SynchronousState createSynchronousState(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SYNCHRONOUSSTATE, DefaultSynchronousState.class);
    }

    /**
     * Gets an instance of type SynchronousState with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SynchronousState getSynchronousState(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SYNCHRONOUSSTATE, DefaultSynchronousState.class);
    }

    /**
     * Gets all instances of SynchronousState from the ontology.
     */
    public Collection<? extends SynchronousState> getAllSynchronousStateInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SYNCHRONOUSSTATE, DefaultSynchronousState.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#SyntacticInteroperability
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#SyntacticInteroperability", SyntacticInteroperability.class, DefaultSyntacticInteroperability.class);
    }

    /**
     * Creates an instance of type SyntacticInteroperability.  Modifies the underlying ontology.
     */
    public SyntacticInteroperability createSyntacticInteroperability(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SYNTACTICINTEROPERABILITY, DefaultSyntacticInteroperability.class);
    }

    /**
     * Gets an instance of type SyntacticInteroperability with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public SyntacticInteroperability getSyntacticInteroperability(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SYNTACTICINTEROPERABILITY, DefaultSyntacticInteroperability.class);
    }

    /**
     * Gets all instances of SyntacticInteroperability from the ontology.
     */
    public Collection<? extends SyntacticInteroperability> getAllSyntacticInteroperabilityInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SYNTACTICINTEROPERABILITY, DefaultSyntacticInteroperability.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Thing
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Thing", Thing.class, DefaultThing.class);
    }

    /**
     * Creates an instance of type Thing.  Modifies the underlying ontology.
     */
    public Thing createThing(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_THING, DefaultThing.class);
    }

    /**
     * Gets an instance of type Thing with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Thing getThing(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_THING, DefaultThing.class);
    }

    /**
     * Gets all instances of Thing from the ontology.
     */
    public Collection<? extends Thing> getAllThingInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_THING, DefaultThing.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Transition
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Transition", Transition.class, DefaultTransition.class);
    }

    /**
     * Creates an instance of type Transition.  Modifies the underlying ontology.
     */
    public Transition createTransition(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TRANSITION, DefaultTransition.class);
    }

    /**
     * Gets an instance of type Transition with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Transition getTransition(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TRANSITION, DefaultTransition.class);
    }

    /**
     * Gets all instances of Transition from the ontology.
     */
    public Collection<? extends Transition> getAllTransitionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TRANSITION, DefaultTransition.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#TransitionFunction
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#TransitionFunction", TransitionFunction.class, DefaultTransitionFunction.class);
    }

    /**
     * Creates an instance of type TransitionFunction.  Modifies the underlying ontology.
     */
    public TransitionFunction createTransitionFunction(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TRANSITIONFUNCTION, DefaultTransitionFunction.class);
    }

    /**
     * Gets an instance of type TransitionFunction with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public TransitionFunction getTransitionFunction(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TRANSITIONFUNCTION, DefaultTransitionFunction.class);
    }

    /**
     * Gets all instances of TransitionFunction from the ontology.
     */
    public Collection<? extends TransitionFunction> getAllTransitionFunctionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TRANSITIONFUNCTION, DefaultTransitionFunction.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#UnidirectionalArc
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#UnidirectionalArc", UnidirectionalArc.class, DefaultUnidirectionalArc.class);
    }

    /**
     * Creates an instance of type UnidirectionalArc.  Modifies the underlying ontology.
     */
    public UnidirectionalArc createUnidirectionalArc(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_UNIDIRECTIONALARC, DefaultUnidirectionalArc.class);
    }

    /**
     * Gets an instance of type UnidirectionalArc with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public UnidirectionalArc getUnidirectionalArc(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_UNIDIRECTIONALARC, DefaultUnidirectionalArc.class);
    }

    /**
     * Gets all instances of UnidirectionalArc from the ontology.
     */
    public Collection<? extends UnidirectionalArc> getAllUnidirectionalArcInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_UNIDIRECTIONALARC, DefaultUnidirectionalArc.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/Automation-I4.0-Ontology#Variable
     */

    {
        javaMapping.add("http://www.semanticweb.org/Automation-I4.0-Ontology#Variable", Variable.class, DefaultVariable.class);
    }

    /**
     * Creates an instance of type Variable.  Modifies the underlying ontology.
     */
    public Variable createVariable(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_VARIABLE, DefaultVariable.class);
    }

    /**
     * Gets an instance of type Variable with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Variable getVariable(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_VARIABLE, DefaultVariable.class);
    }

    /**
     * Gets all instances of Variable from the ontology.
     */
    public Collection<? extends Variable> getAllVariableInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_VARIABLE, DefaultVariable.class);
    }


}
