package aI40minontology;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Process_ <br>
 * @version generated on Sun Feb 10 20:58:15 COT 2019 by Santiago
 */

public interface Process_ extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasAssociatedModel
     */
     
    /**
     * Gets all property values for the hasAssociatedModel property.<p>
     * 
     * @returns a collection of values for the hasAssociatedModel property.
     */
    Collection<? extends DiscreteDynamicsModel> getHasAssociatedModel();

    /**
     * Checks if the class has a hasAssociatedModel property value.<p>
     * 
     * @return true if there is a hasAssociatedModel property value.
     */
    boolean hasHasAssociatedModel();

    /**
     * Adds a hasAssociatedModel property value.<p>
     * 
     * @param newHasAssociatedModel the hasAssociatedModel property value to be added
     */
    void addHasAssociatedModel(DiscreteDynamicsModel newHasAssociatedModel);

    /**
     * Removes a hasAssociatedModel property value.<p>
     * 
     * @param oldHasAssociatedModel the hasAssociatedModel property value to be removed.
     */
    void removeHasAssociatedModel(DiscreteDynamicsModel oldHasAssociatedModel);


    /* ***************************************************
     * Property http://www.semanticweb.org/Automation-I4.0-Ontology#isPerformedBy
     */
     
    /**
     * Gets all property values for the isPerformedBy property.<p>
     * 
     * @returns a collection of values for the isPerformedBy property.
     */
    Collection<? extends Service> getIsPerformedBy();

    /**
     * Checks if the class has a isPerformedBy property value.<p>
     * 
     * @return true if there is a isPerformedBy property value.
     */
    boolean hasIsPerformedBy();

    /**
     * Adds a isPerformedBy property value.<p>
     * 
     * @param newIsPerformedBy the isPerformedBy property value to be added
     */
    void addIsPerformedBy(Service newIsPerformedBy);

    /**
     * Removes a isPerformedBy property value.<p>
     * 
     * @param oldIsPerformedBy the isPerformedBy property value to be removed.
     */
    void removeIsPerformedBy(Service oldIsPerformedBy);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
