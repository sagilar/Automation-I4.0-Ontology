package aI40minontology.impl;

import aI40minontology.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultStandard <br>
 * @version generated on Sun Feb 10 20:58:15 COT 2019 by Santiago
 */
public class DefaultStandard extends WrappedIndividualImpl implements Standard {

    public DefaultStandard(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasDomain
     */
     
    public Collection<? extends Domain> getHasDomain() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASDOMAIN,
                                               DefaultDomain.class);
    }

    public boolean hasHasDomain() {
	   return !getHasDomain().isEmpty();
    }

    public void addHasDomain(Domain newHasDomain) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASDOMAIN,
                                       newHasDomain);
    }

    public void removeHasDomain(Domain oldHasDomain) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASDOMAIN,
                                          oldHasDomain);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/Automation-I4.0-Ontology#standardizes
     */
     
    public Collection<? extends WrappedIndividual> getStandardizes() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_STANDARDIZES,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasStandardizes() {
	   return !getStandardizes().isEmpty();
    }

    public void addStandardizes(WrappedIndividual newStandardizes) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_STANDARDIZES,
                                       newStandardizes);
    }

    public void removeStandardizes(WrappedIndividual oldStandardizes) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_STANDARDIZES,
                                          oldStandardizes);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#concernsTo
     */
     
    public Collection<? extends String> getConcernsTo() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CONCERNSTO, String.class);
    }

    public boolean hasConcernsTo() {
		return !getConcernsTo().isEmpty();
    }

    public void addConcernsTo(String newConcernsTo) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CONCERNSTO, newConcernsTo);
    }

    public void removeConcernsTo(String oldConcernsTo) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_CONCERNSTO, oldConcernsTo);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasDBpediaResource
     */
     
    public Collection<? extends Object> getHasDBpediaResource() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDBPEDIARESOURCE, Object.class);
    }

    public boolean hasHasDBpediaResource() {
		return !getHasDBpediaResource().isEmpty();
    }

    public void addHasDBpediaResource(Object newHasDBpediaResource) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDBPEDIARESOURCE, newHasDBpediaResource);
    }

    public void removeHasDBpediaResource(Object oldHasDBpediaResource) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDBPEDIARESOURCE, oldHasDBpediaResource);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasEmbeddingCapability
     */
     
    public Collection<? extends String> getHasEmbeddingCapability() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASEMBEDDINGCAPABILITY, String.class);
    }

    public boolean hasHasEmbeddingCapability() {
		return !getHasEmbeddingCapability().isEmpty();
    }

    public void addHasEmbeddingCapability(String newHasEmbeddingCapability) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASEMBEDDINGCAPABILITY, newHasEmbeddingCapability);
    }

    public void removeHasEmbeddingCapability(String oldHasEmbeddingCapability) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASEMBEDDINGCAPABILITY, oldHasEmbeddingCapability);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasOfficialResource
     */
     
    public Collection<? extends Object> getHasOfficialResource() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASOFFICIALRESOURCE, Object.class);
    }

    public boolean hasHasOfficialResource() {
		return !getHasOfficialResource().isEmpty();
    }

    public void addHasOfficialResource(Object newHasOfficialResource) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASOFFICIALRESOURCE, newHasOfficialResource);
    }

    public void removeHasOfficialResource(Object oldHasOfficialResource) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASOFFICIALRESOURCE, oldHasOfficialResource);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasSoftwareContent
     */
     
    public Collection<? extends String> getHasSoftwareContent() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASSOFTWARECONTENT, String.class);
    }

    public boolean hasHasSoftwareContent() {
		return !getHasSoftwareContent().isEmpty();
    }

    public void addHasSoftwareContent(String newHasSoftwareContent) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASSOFTWARECONTENT, newHasSoftwareContent);
    }

    public void removeHasSoftwareContent(String oldHasSoftwareContent) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASSOFTWARECONTENT, oldHasSoftwareContent);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#isContextStandard
     */
     
    public Collection<? extends Boolean> getIsContextStandard() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ISCONTEXTSTANDARD, Boolean.class);
    }

    public boolean hasIsContextStandard() {
		return !getIsContextStandard().isEmpty();
    }

    public void addIsContextStandard(Boolean newIsContextStandard) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ISCONTEXTSTANDARD, newIsContextStandard);
    }

    public void removeIsContextStandard(Boolean oldIsContextStandard) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ISCONTEXTSTANDARD, oldIsContextStandard);
    }


}
