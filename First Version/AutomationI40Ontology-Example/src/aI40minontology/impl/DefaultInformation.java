package aI40minontology.impl;

import aI40minontology.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultInformation <br>
 * @version generated on Sun Feb 10 20:58:15 COT 2019 by Santiago
 */
public class DefaultInformation extends WrappedIndividualImpl implements Information {

    public DefaultInformation(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasContent
     */
     
    public Collection<? extends String> getHasContent() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASCONTENT, String.class);
    }

    public boolean hasHasContent() {
		return !getHasContent().isEmpty();
    }

    public void addHasContent(String newHasContent) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASCONTENT, newHasContent);
    }

    public void removeHasContent(String oldHasContent) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASCONTENT, oldHasContent);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasReceiver
     */
     
    public Collection<? extends Integer> getHasReceiver() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASRECEIVER, Integer.class);
    }

    public boolean hasHasReceiver() {
		return !getHasReceiver().isEmpty();
    }

    public void addHasReceiver(Integer newHasReceiver) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASRECEIVER, newHasReceiver);
    }

    public void removeHasReceiver(Integer oldHasReceiver) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASRECEIVER, oldHasReceiver);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/Automation-I4.0-Ontology#hasTransmitter
     */
     
    public Collection<? extends Integer> getHasTransmitter() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASTRANSMITTER, Integer.class);
    }

    public boolean hasHasTransmitter() {
		return !getHasTransmitter().isEmpty();
    }

    public void addHasTransmitter(Integer newHasTransmitter) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASTRANSMITTER, newHasTransmitter);
    }

    public void removeHasTransmitter(Integer oldHasTransmitter) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASTRANSMITTER, oldHasTransmitter);
    }


}
